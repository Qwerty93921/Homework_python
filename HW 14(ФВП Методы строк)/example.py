# Метод - это функция, связанная с определенным типом объекта. Методы являются специфичными для каждого отдельного типа.

# Вызов метода: объект.метод(аргументы)

a = "hello123123$&"
b = a.upper()

print(b)
# HELLO123123$&


c = "ASDDSASADSA123"
d = c.lower()

print(d)
# asddsasadsa123

q = "HELLO WORLD"
q = q.lower()
# Перезаписывание значения буквы q

print(q)
# hello world --------------------------------------------------------------------------------------------------------------------------------------


w = q.count("o")
print(w)
# 2
# count считает количество элементов в строке

# В count можно писать 1,2,3 АРГУМЕНТА. Первое что надо искать, второе - START, третье - END


e = q.count("o", 6) # ищет "o" начиная с 6 позиции
print(e)
# 1

r = q.count("l", 1, 3) # в промежутке "el" ищет букву "l"
print(r)
# 1


# ---------------------------------------------------------------------------------------------------------------------------------------------------------

# find() - может вызываться с 1,2,3 параметрами
# find() - ищет индекс строки которую надо найти

q = "HELLO WORLD"
q = q.lower()
# Перезаписывание значения буквы q

print(q)
# hello world

t = q.find("e")
print(t)
# 1
# 1 - это ИНДЕКС буквы "е"

y = q.find("wor")
print(y)
# 6 индекс


u = q.find("c")
print(u)
# -1
# - 1 означает что буквы НЕТ

i = q.find("o")
print(i)
# 4 индекс
# Выдает индекс который БЛИЖЕ к началу(к индексу 0)


o = q.rfind("o")
print(o)
# 7 индекс
# RFIND - ищет НАЧИНАЯ СПРАВА

p = q.find("o", 6)
print(p)
# 7
# СТАРТ начала поиска


f = q.index("o")
print(f)
# 4 - индекс

# INDEX почти как FIND, НО если в INDEX искать букву КОТОРОЙ НЕТ, тогда он выдаст ОШИБКУ
# В то время как FIND, выдаст "-1"

# g = q.index("z")
# print(g)

# ValueError: substring not found


# ---------------------------------------------------------------------------------------------------------------------------------------------------------


q = "HELLO WORLD"
q = q.lower()
# Перезаписывание значения буквы q

print(q)
# hello world

h = q.replace("o", "???")
print(h)
# hell??? w???rld


# REPLACE - может иметь 1,2,3 аргумента

j = q.replace("l", "") # Заменяем "l" на пустоту
print(j)
# heo word

k = q.replace(" ", "") # Заменяем ПРОБЕЛЫ на пустоту
print(k)
# helloworld

l = q.replace("l", "", 2) # Убираем "l" 2 РАЗА
print(l)
# heo world

# ---------------------------------------------------------------------------------------------------------------------------------------------------------

q = "HELLO WORLD"
q = q.lower()
# Перезаписывание значения буквы q

print(q)
# hello world


# ISALPHA - проверяет состоит ли строка ЦЕЛИКОМ из БУКВ, если там ПРОБЕЛ, тогда возвращает FALSE
z = q.isalpha()
print(z)
# False


# ISDIGIT - проверяет состоит ли строка ЦЕЛИКОМ из ЦИФР, если там ПРОБЕЛ, тогда возвращает FALSE

x = "123 45".isdigit()
print(x)
# False

# ---------------------------------------------------------------------------------------------------------------------------------------------------------

# RJUST и LJUST требуют ШИРИНУ в скобки и дополняют строку чтобы дошло до 5 ИНДЕКСА, и строка ПРИЖИМАЕТСЯ к ПРАВОМУ КРАЮ
# ПЕРВОЕ число это до какого индекса в сумме получится, ВТОРОЕ число это ЗАПОЛНИТЕЛЬ "3"
# В НАПОЛНИТЕЛЬ можно добавить ТОЛЬКО 1 СИМВОЛ, или будет ОШИБКА


v = "111"
v = v.rjust(5)
print(v)
#   111

n = "111"
n = n.rjust(5, "3")
print(n)
# 33111

m = "111"
m = m.ljust(6, "-")
print(m)
# 111---
# ИЗНАЧАЛЬНОЕ содержимое ушло ВЛЕВО
