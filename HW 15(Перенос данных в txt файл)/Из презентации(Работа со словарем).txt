Первый параметр функции представляет путь к файлу. Путь файла может быть абсолютным, то есть
начинаться с буквы диска, например, C://somedir/somefile.txt. Либо можно быть относительным,
например, somedir/somefile.txt - в этом случае поиск файла будет идти относительно расположения
запущенного скрипта Python.
Второй передаваемый аргумент - mode устанавливает режим открытия файла в зависимости от того, что
мы собираемся с ним делать. Существует 4 общих режима:
r (Read). Файл открывается для чтения. Если файл не найден, то генерируется исключение
FileNotFoundError
w (Write). Файл открывается для записи. Если файл отсутствует, то он создается. Если подобный файл уже
есть, то он создается заново, и соответственно старые данные в нем стираются.
a (Append). Файл открывается для дозаписи. Если файл отсутствует, то он создается. Если подобный файл
уже есть, то данные записываются в его конец.
b (Binary). Используется для работы с бинарными файлами. Применяется вместе с другими режимами -
w или r.

myfile = open("hello.txt", "w")
myfile.close()

--------------------------------------------------------------------------------

my_file = open("Name.txt", encoding="utf-8")
text = my_file.read()
my_file.close()

print(text)

--------------------------------------------------------------------------------------

Эта конструкция определяет для открытого файла переменную file_obj и
выполняет набор инструкций. После их выполнения файл автоматически
закрывается. Даже если при выполнении инструкций в блоке with возникнут
какие-либо исключения, то файл все равно закрывается.

with open(file, mode) as file_obj:
инструкции

--------------------------------------------------------------------------------------------

with open("hello.txt", "w") as somefile:
somefile.write("hello world")

------------------------------------------------------------------------------------------------------

Запись в текстовый файл
метод write(str)

with open("hello.txt", "w") as file:
file.write("hello world")

with open("hello.txt", "a") as file:
file.write("\ngood bye, world")

Вывод:

hello world
good bye, world

-----------------------------------------------------------------------------------------------------

readline(): считывает одну строку из файла
read(): считывает все содержимое файла в
одну строку
readlines(): считывает все строки файла в
список



Метод readline() для чтения отдельных строк:
with open("hello.txt", "r") as file:
str1 = file.readline()
print(str1, end="")
str2 = file.readline()
print(str2)

----------------------------------------------------------------------------------------------------------

Вывод на консоль
hello world
good bye, world

---------------------------------------------------------------------------------------------------------------

Метод readlines() для считывания всего файла в
список строк:
with open("hello.txt", "r") as file:
contents = file.readlines()
str1 = contents[0]
str2 = contents[1]
print(str1, end="")
print(str2)

-----------------------------------------------------------------------------------------------------------------

# имя файла
FILENAME = "messages.txt"

# определяем пустой список
messages = list()

for i in range(4):
    message = input("Введите строку " + str(i+1) + ": ")
    messages.append(message + "\n")

# запись списка в файл
with open(FILENAME, "a") as file:
for message in messages:
    file.write(message)

# считываем сообщения из файла
print("Считанные сообщения")
with open(FILENAME, "r") as file:
for message in file:
print(message, end="")

Задача: Записывать введенный
пользователем массив строк и
считывать его обратно из файла
на консоль:

Результат программы:

Введите строку 1: hello
Введите строку 2: world peace
Введите строку 3: great job
Введите строку 4: Python
Считанные сообщения
hello
world peace
great job
Python
